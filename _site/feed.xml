<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:3000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:3000/" rel="alternate" type="text/html" /><updated>2020-05-15T13:52:02-04:00</updated><id>http://localhost:3000/feed.xml</id><title type="html">danielvanderwal.github.io</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>Daniel VanderWal</name></author><entry><title type="html">NGINX Basics</title><link href="http://localhost:3000/blog/1_basic_nginx_server_configuration/" rel="alternate" type="text/html" title="NGINX Basics" /><published>2020-04-08T00:00:00-04:00</published><updated>2020-04-08T00:00:00-04:00</updated><id>http://localhost:3000/blog/1_basic_nginx_server_configuration</id><content type="html" xml:base="http://localhost:3000/blog/1_basic_nginx_server_configuration/">&lt;h2 id=&quot;lesson-objectives&quot;&gt;Lesson Objectives:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explore the /etc/nginx directory&lt;/li&gt;
  &lt;li&gt;Explore the nginx.conf file&lt;/li&gt;
  &lt;li&gt;Learn how to check the NGINX configuration using nginx -t&lt;/li&gt;
  &lt;li&gt;Learn how to reload the NGINX configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-etcnginx-directory&quot;&gt;The /etc/nginx directory:&lt;/h2&gt;

&lt;h4 id=&quot;location-for-all-configuration-files&quot;&gt;Location for all configuration files:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;nginx.conf
    &lt;ul&gt;
      &lt;li&gt;Virtual host configuration files:
        &lt;ul&gt;
          &lt;li&gt;conf.d directory (RHEL)&lt;/li&gt;
          &lt;li&gt;sites-available directory (debian/ubuntu)&lt;/li&gt;
          &lt;li&gt;sites-enabled directory (debian/ubuntu)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Module configuration files:
        &lt;ul&gt;
          &lt;li&gt;conf.d directory&lt;/li&gt;
          &lt;li&gt;modules-available directory&lt;/li&gt;
          &lt;li&gt;modules-enabled directory&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;the-nginxconf-file&quot;&gt;The nginx.conf file:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Defines global configuration&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server process configuration:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;User server runs as&lt;/li&gt;
  &lt;li&gt;Location of PID file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Performance:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;worker_processes&lt;/li&gt;
  &lt;li&gt;worker_connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Location(s) of module and virtual host configuration files (via include)&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-to-check-the-nginx-configuration&quot;&gt;How to check the NGINX configuration:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Use &lt;em&gt;nginx -t&lt;/em&gt; before every reload!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reloading the NGINX Configuration:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using systemctl:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Reload&lt;/strong&gt; - Doesn’t drop existing connections&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Restart&lt;/strong&gt; - Drops existing connections&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using NGINX - nginx -s:
    &lt;ul&gt;
      &lt;li&gt;Validates the configuration before restarting&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The safe bet is to execute &lt;strong&gt;nginx -t&lt;/strong&gt; before a reload or restart!&lt;/p&gt;</content><author><name>Daniel VanderWal</name></author><category term="nginx" /><summary type="html">Lesson Objectives: Explore the /etc/nginx directory Explore the nginx.conf file Learn how to check the NGINX configuration using nginx -t Learn how to reload the NGINX configuration</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:3000/blog/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-04-18T15:34:30-04:00</published><updated>2019-04-18T15:34:30-04:00</updated><id>http://localhost:3000/blog/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:3000/blog/welcome-to-jekyll/">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Daniel VanderWal</name></author><category term="Jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>